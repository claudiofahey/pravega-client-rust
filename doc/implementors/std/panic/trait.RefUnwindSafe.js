(function() {var implementors = {};
implementors["pravega_client"] = [{"text":"impl !RefUnwindSafe for ByteStreamWriter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ByteStreamReader","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ClientFactory","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for RawClientError","synthetic":true,"types":[]},{"text":"impl&lt;__T0&gt; RefUnwindSafe for AuthTokenExpired&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for GetConnectionFromPool","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for WriteRequest","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReadReply","synthetic":true,"types":[]},{"text":"impl&lt;__T0, __T1&gt; RefUnwindSafe for IncompatibleVersion&lt;__T0, __T1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T1: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for RequestTimeout","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SegmentWriterError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SendToProcessor","synthetic":true,"types":[]},{"text":"impl&lt;__T0, __T1&gt; RefUnwindSafe for EventSizeTooLarge&lt;__T0, __T1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T1: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ParseToEventCommand","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SegmentWriting","synthetic":true,"types":[]},{"text":"impl&lt;__T0&gt; RefUnwindSafe for RetryControllerWriting&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;__T0&gt; RefUnwindSafe for RetryConnectionPool&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;__T0&gt; RefUnwindSafe for RetryRawClient&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;__T0, __T1&gt; RefUnwindSafe for WrongReply&lt;__T0, __T1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T1: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;__T0&gt; RefUnwindSafe for WrongHost&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;__T0&gt; RefUnwindSafe for ReactorClosed&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ConditionalCheckFailed","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionalEventStreamWriterError","synthetic":true,"types":[]},{"text":"impl&lt;__T0&gt; RefUnwindSafe for PingerError&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TxnStreamControllerError","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TransactionError","synthetic":true,"types":[]},{"text":"impl&lt;__T0&gt; RefUnwindSafe for TxnSegmentWriterError&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TxnStreamWriterError","synthetic":true,"types":[]},{"text":"impl&lt;__T0&gt; RefUnwindSafe for TxnClosed&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for TxnControllerError","synthetic":true,"types":[]},{"text":"impl&lt;__T0, __T1&gt; RefUnwindSafe for TxnCommitError&lt;__T0, __T1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T1: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;__T0, __T1&gt; RefUnwindSafe for TxnAbortError&lt;__T0, __T1&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,<br>&nbsp;&nbsp;&nbsp;&nbsp;__T1: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SerdeError","synthetic":true,"types":[]},{"text":"impl&lt;__T0&gt; RefUnwindSafe for Cbor&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SynchronizerError","synthetic":true,"types":[]},{"text":"impl&lt;__T0&gt; RefUnwindSafe for SyncTableError&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;__T0&gt; RefUnwindSafe for SyncUpdateError&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;__T0&gt; RefUnwindSafe for SyncTombstoneError&lt;__T0&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;__T0: RefUnwindSafe,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EventReader","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReaderState","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for EventStreamWriter","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ClientMetrics","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReaderGroup","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !RefUnwindSafe for RawClientImpl&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReaderGroupStateError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReaderGroupState","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Offset","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderGroupConfig","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for ReaderGroupConfigBuilder","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SegmentMetadataClientError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SegmentMetadataClient","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for ReaderError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for AsyncSegmentReaderImpl","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Event","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for SegmentSlice","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SliceMetadata","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for SegmentDataBuffer","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TableSynchronizer","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Key","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Value","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Table","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TableMap","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TableError","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for TransactionalEventStreamWriter","synthetic":true,"types":[]},{"text":"impl !RefUnwindSafe for Transaction","synthetic":true,"types":[]}];
implementors["server_cli"] = [{"text":"impl RefUnwindSafe for Command","synthetic":true,"types":[]},{"text":"impl RefUnwindSafe for Opt","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()